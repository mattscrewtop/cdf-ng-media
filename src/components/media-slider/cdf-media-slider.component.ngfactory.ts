/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './cdf-media-slider.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/zone/ng_zone';
import * as import10 from '@angular/core/src/animation/animation_transition';
import * as import11 from '@angular/core/src/animation/animation_sequence_player';
import * as import12 from '@angular/core/src/animation/animation_styles';
import * as import13 from '@angular/core/src/animation/animation_style_util';
import * as import14 from '@angular/core/src/animation/animation_keyframe';
import * as import15 from '@angular/core/src/animation/animation_player';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/common/src/directives/ng_if';
import * as import20 from '../media/cdf-media.component';
import * as import21 from '../media/cdf-media.component.ngfactory';
import * as import22 from '@angular/core/src/linker/query_list';
import * as import23 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import24 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import25 from '@angular/core/src/linker/element_ref';
import * as import26 from '@angular/common/src/directives/ng_for';
export class Wrapper_CdfMediaSliderComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CdfMediaSliderComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.CdfMediaSliderComponent(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_mediaModelList(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.mediaModelList = currValue;
      this._expr_0 = currValue;
    }
  }
  check_showType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.showType = currValue;
      this._expr_1 = currValue;
    }
  }
  check_showTitle(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.showTitle = currValue;
      this._expr_2 = currValue;
    }
  }
  check_showDescription(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.showDescription = currValue;
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onImageClick.subscribe(_eventHandler.bind(view,'onImageClick'))); }
  }
}
var renderType_CdfMediaSliderComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CdfMediaSliderComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CdfMediaSliderComponent>;
  _CdfMediaSliderComponent_0_3:Wrapper_CdfMediaSliderComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CdfMediaSliderComponent_Host0,renderType_CdfMediaSliderComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'cdf-media-slider',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CdfMediaSliderComponent0(this.viewUtils,this,0,this._el_0);
    this._CdfMediaSliderComponent_0_3 = new Wrapper_CdfMediaSliderComponent(this.injectorGet(import9.NgZone,this.parentIndex),this.renderer);
    this.compView_0.create(this._CdfMediaSliderComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CdfMediaSliderComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CdfMediaSliderComponent) && (0 === requestNodeIndex))) { return this._CdfMediaSliderComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CdfMediaSliderComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CdfMediaSliderComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CdfMediaSliderComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const CdfMediaSliderComponentNgFactory:import8.ComponentFactory<import0.CdfMediaSliderComponent> = new import8.ComponentFactory<import0.CdfMediaSliderComponent>('cdf-media-slider',View_CdfMediaSliderComponent_Host0,import0.CdfMediaSliderComponent);
const styles_CdfMediaSliderComponent:any[] = ['[_nghost-%COMP%]\n	{\n		display: block;\n		min-height: 10rem;\n		position: relative;\n	}\n\n	.media-slider-flex-container[_ngcontent-%COMP%]\n	{\n		display: -webkit-box;\n		display: -moz-box;\n		display: -ms-flexbox;\n		display: -moz-flex;\n		display: -webkit-flex;\n		display: flex;		\n		flex-direction: row;\n		flex-wrap: wrap;\n		justify-content: center;\n		min-height: 550px;\n		margin: auto;\n	}\n\n	@media only screen and (min-width : 842px)\n	{\n		.media-slider-flex-container[_ngcontent-%COMP%]\n		{\n			justify-content: flex-start;\n			max-width: 825px;\n		}		\n	}	\n\n	.media-slider-flex-item[_ngcontent-%COMP%]\n	{\n		list-style: none;\n		width: 100vw;\n		height: 30vh;		\n		position: relative;\n	}\n\n	@media only screen and (min-width : 568px)\n	{\n		.media-slider-flex-item[_ngcontent-%COMP%]\n		{\n			width: 48vw;\n			height: 30vh;	\n		}		\n	}	\n\n	@media only screen and (min-width : 842px)\n	{\n		.media-slider-flex-item[_ngcontent-%COMP%]\n		{\n			width: 275px;\n			height: 275px;\n		}		\n	}		\n\n	cdf-media[_ngcontent-%COMP%]\n	{\n		height: 100%;\n		width: 100%;\n	}\n\n	.cdf-media-pane-container[_ngcontent-%COMP%]\n	{\n		cursor: pointer;\n		margin: 0;\n		max-height: 100%;\n		min-height: 100%;\n		padding: 0;\n		z-index: 10;\n\n		position: absolute;\n		top: 0;\n		right: 0;\n		bottom: 0;\n		left: 0;	\n	}\n		.cdf-media-pane-container__title[_ngcontent-%COMP%]\n		{\n			color: #000;\n			font-size: 3.25rem;\n			margin: auto;\n			transform: rotate(3deg);\n		}	\n\n		.cdf-media-pane-container[_ngcontent-%COMP%]:nth-child(2n)\n		{\n			.feature-list-container__item__title\n			{\n				transform: rotate(-3deg);\n			}							\n		}			\n\n\n	.cdf-info-pane-container[_ngcontent-%COMP%]\n	{\n		background-color: #fff;\n		border: solid 2px #becbd2;\n		bottom: 0;\n		height: 100%;\n		left: 0;	\n		overflow: hidden;\n		padding: 2.75rem 1rem 1rem 1rem;\n		position: absolute;\n		right: 0;\n		top: 0;\n		width: 100%;\n		z-index: 100;\n	}	\n\n		.cdf-info-pane-container__wrapper[_ngcontent-%COMP%]\n		{\n			z-index: 0;\n		}\n\n		.cdf-info-pane-container__title[_ngcontent-%COMP%]\n		{\n			margin: 0 0 1rem 0;\n		}\n\n		.cdf-info-pane-container__description[_ngcontent-%COMP%]\n		{\n			font-size: 1rem;\n			margin: 0 0 1rem 0;\n		}\n\n		.cdf-info-pane-container__button[_ngcontent-%COMP%]\n		{\n		}'];
var CdfMediaSliderComponent_mediaListItemTrigger_states:any = {
  'inactive': {'opacity': '1'},
  'active': {'overflow': 'visible'},
  'dimmed': {
    'opacity': '0.2',
    'filter': 'blur(2px)'
  }
  ,
  '*': {}
}
;
function CdfMediaSliderComponent_mediaListItemTrigger_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import10.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'mediaListItemTrigger'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = CdfMediaSliderComponent_mediaListItemTrigger_states['*'];
  var startStateStyles:any = CdfMediaSliderComponent_mediaListItemTrigger_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = CdfMediaSliderComponent_mediaListItemTrigger_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((true && (nextState == 'dimmed')) || (true && (nextState == 'active'))))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {}
      ]
      )),import13.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),300,0,'ease-out',previousPlayers)]);
    totalTime = 300;
  }
  if (((player == (null as any)) && (true && (nextState == 'inactive')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {}
      ]
      )),import13.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),700,0,'ease-out',previousPlayers)]);
    totalTime = 700;
  }
  if ((player == (null as any))) { (player = new import15.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import13.renderStyles(element,view.renderer,import13.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import11.AnimationSequencePlayer(previousPlayers).destroy();
  import13.renderStyles(element,view.renderer,import13.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'mediaListItemTrigger',player);
  return new import10.AnimationTransition(player,currentState,nextState,totalTime);
}
var CdfMediaSliderComponent_mediaStateTrigger_states:any = {
  'inactive': {},
  'active': {'zIndex': '1000'},
  '*': {}
}
;
function CdfMediaSliderComponent_mediaStateTrigger_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import10.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'mediaStateTrigger'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = CdfMediaSliderComponent_mediaStateTrigger_states['*'];
  var startStateStyles:any = CdfMediaSliderComponent_mediaStateTrigger_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = CdfMediaSliderComponent_mediaStateTrigger_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && (true && (nextState == 'inactive')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),import13.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),500,350,'ease-in',previousPlayers)]);
    totalTime = 850;
  }
  if ((player == (null as any))) { (player = new import15.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import13.renderStyles(element,view.renderer,import13.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import11.AnimationSequencePlayer(previousPlayers).destroy();
  import13.renderStyles(element,view.renderer,import13.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'mediaStateTrigger',player);
  return new import10.AnimationTransition(player,currentState,nextState,totalTime);
}
var CdfMediaSliderComponent_infoPaneSlideTrigger_states:any = {
  'slideToTop': {
    'zIndex': '11',
    'top': '-100%'
  }
  ,
  'slideToRight': {
    'zIndex': '11',
    'left': '100%'
  }
  ,
  'slideToBottom': {
    'zIndex': '11',
    'top': '100%'
  }
  ,
  'slideToLeft': {
    'zIndex': '11',
    'left': '-100%'
  }
  ,
  '*': {},
  'void': {}
}
;
function CdfMediaSliderComponent_infoPaneSlideTrigger_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import10.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'infoPaneSlideTrigger'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = CdfMediaSliderComponent_infoPaneSlideTrigger_states['*'];
  var startStateStyles:any = CdfMediaSliderComponent_infoPaneSlideTrigger_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = CdfMediaSliderComponent_infoPaneSlideTrigger_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'slideToTop')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '0'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-25%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-75%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-100%'}])))
      ]
    ,500,350,'ease-in',previousPlayers)]);
    totalTime = 850;
  }
  if (((player == (null as any)) && ((currentState == 'slideToTop') && true))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-100%'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-75%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '-25%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '0'}])))
      ]
    ,500,0,'ease-out',previousPlayers)]);
    totalTime = 500;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'slideToRight')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '0'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '25%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '75%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '100%'}])))
      ]
    ,500,250,'ease-in',previousPlayers)]);
    totalTime = 750;
  }
  if (((player == (null as any)) && ((currentState == 'slideToRight') && true))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '100%'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '75%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '25%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '0'}])))
      ]
    ,500,0,'ease-out',previousPlayers)]);
    totalTime = 500;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'slideToBottom')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '0'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '25%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '75%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '100%'}])))
      ]
    ,500,350,'ease-in',previousPlayers)]);
    totalTime = 850;
  }
  if (((player == (null as any)) && ((currentState == 'slideToBottom') && true))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '100%'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '75%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '25%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'top': '0'}])))
      ]
    ,500,0,'ease-out',previousPlayers)]);
    totalTime = 500;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'slideToLeft')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '0'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-25%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-75%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-100%'}])))
      ]
    ,500,350,'ease-in',previousPlayers)]);
    totalTime = 850;
  }
  if (((player == (null as any)) && ((currentState == 'slideToLeft') && true))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-100%'}]))),
        new import14.AnimationKeyframe(0.25,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-75%'}]))),
        new import14.AnimationKeyframe(0.5,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-50%'}]))),
        new import14.AnimationKeyframe(0.75,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '-25%'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'left': '0'}])))
      ]
    ,500,0,'ease-out',previousPlayers)]);
    totalTime = 500;
  }
  if ((player == (null as any))) { (player = new import15.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import13.renderStyles(element,view.renderer,import13.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import11.AnimationSequencePlayer(previousPlayers).destroy();
  import13.renderStyles(element,view.renderer,import13.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'infoPaneSlideTrigger',player);
  return new import10.AnimationTransition(player,currentState,nextState,totalTime);
}
class View_CdfMediaSliderComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_CdfMediaSliderComponent3,renderType_CdfMediaSliderComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'p',new import3.InlineArray2(2,'class','cdf-info-pane-container__description'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'',this.parentView.parentView.context.$implicit.Description,'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CdfMediaSliderComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _anchor_11:any;
  /*private*/ _vc_11:import16.ViewContainer;
  _TemplateRef_11_5:any;
  _NgIf_11_6:import17.Wrapper_NgIf;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_CdfMediaSliderComponent2,renderType_CdfMediaSliderComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_20 = import1.UNINITIALIZED;
    this._expr_21 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'section',new import3.InlineArray2(2,'class','cdf-info-pane-container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n				',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'section',new import3.InlineArray2(2,'class','cdf-info-pane-container__wrapper'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n\n					',(null as any));
    this._text_4 = this.renderer.createText(this._el_2,'\n					',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_2,'a',new import3.InlineArray2(2,'class','close-button'),(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'×',(null as any));
    this._text_7 = this.renderer.createText(this._el_2,'\n\n					',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_2,'h2',new import3.InlineArray2(2,'class','cdf-info-pane-container__title'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'',(null as any));
    this._text_10 = this.renderer.createText(this._el_2,'\n					',(null as any));
    this._anchor_11 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_11 = new import16.ViewContainer(11,2,this,this._anchor_11);
    this._TemplateRef_11_5 = new import18.TemplateRef_(this,11,this._anchor_11);
    this._NgIf_11_6 = new import17.Wrapper_NgIf(this._vc_11.vcRef,this._TemplateRef_11_5);
    this._text_12 = this.renderer.createText(this._el_2,'\n\n					',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_2,'button',new import3.InlineArray2(2,'class','button radius small hollow cdf-info-pane-container__button'),(null as any));
    this._text_14 = this.renderer.createText(this._el_13,'Learn More',(null as any));
    this._text_15 = this.renderer.createText(this._el_2,'	\n\n				',(null as any));
    this._text_16 = this.renderer.createText(this._el_0,'\n			',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_5));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_13,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_13));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._anchor_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._text_15,
      this._text_16
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (11 === requestNodeIndex))) { return this._TemplateRef_11_5; }
    if (((token === import19.NgIf) && (11 === requestNodeIndex))) { return this._NgIf_11_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_20:any = this.parentView.context.$implicit.infoPaneExpandedState;
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      var animationTransition_infoPaneSlideTrigger:any = this.componentType.animations['infoPaneSlideTrigger'](this,this._el_0,((this._expr_20 == import1.UNINITIALIZED)? 'void': this._expr_20),((currVal_20 == import1.UNINITIALIZED)? 'void': currVal_20));
      this._expr_20 = currVal_20;
    }
    const currVal_11_0_0:any = this.parentView.parentView.context.showDescription;
    this._NgIf_11_6.check_ngIf(currVal_11_0_0,throwOnChange,false);
    this._NgIf_11_6.ngDoCheck(this,this._anchor_11,throwOnChange);
    this._vc_11.detectChangesInNestedViews(throwOnChange);
    const currVal_21:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.Title,'');
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setText(this._text_9,currVal_21);
      this._expr_21 = currVal_21;
    }
  }
  destroyInternal():void {
    this._vc_11.destroyNestedViews();
  }
  detachInternal():void {
    var animationTransition_infoPaneSlideTrigger:any = this.componentType.animations['infoPaneSlideTrigger'](this,this._el_0,this._expr_20,'void');
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 11)) { return new View_CdfMediaSliderComponent3(this.viewUtils,this,11,this._anchor_11,this._vc_11); }
    return (null as any);
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.onStopVideoClick(this.parentView.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_13(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.doImageClick(this.parentView.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_CdfMediaSliderComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  compView_6:import2.AppView<import20.CdfMediaComponent>;
  _CdfMediaComponent_6_3:import21.Wrapper_CdfMediaComponent;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _vc_12:import16.ViewContainer;
  _TemplateRef_12_5:any;
  _NgIf_12_6:import17.Wrapper_NgIf;
  _text_13:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_CdfMediaSliderComponent1,renderType_CdfMediaSliderComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'li',new import3.InlineArray2(2,'class','media-slider-flex-item'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n			\n			\n			',(null as any));
    this._text_2 = this.renderer.createText(this._el_0,'\n			',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_0,'section',new import3.InlineArray2(2,'class','cdf-media-pane-container'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'		\n				',(null as any));
    this._text_5 = this.renderer.createText(this._el_3,'\n				',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_3,'cdf-media',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_6 = new import21.View_CdfMediaComponent0(this.viewUtils,this,6,this._el_6);
    this._CdfMediaComponent_6_3 = new import21.Wrapper_CdfMediaComponent();
    this._text_7 = this.renderer.createText((null as any),'\n					',(null as any));
    this._text_8 = this.renderer.createText((null as any),'			\n				',(null as any));
    this.compView_6.create(this._CdfMediaComponent_6_3.context);
    this._text_9 = this.renderer.createText(this._el_3,'		\n			',(null as any));
    this._text_10 = this.renderer.createText(this._el_0,'\n\n			',(null as any));
    this._text_11 = this.renderer.createText(this._el_0,'\n			',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_12 = new import16.ViewContainer(12,0,this,this._anchor_12);
    this._TemplateRef_12_5 = new import18.TemplateRef_(this,12,this._anchor_12);
    this._NgIf_12_6 = new import17.Wrapper_NgIf(this._vc_12.vcRef,this._TemplateRef_12_5);
    this._text_13 = this.renderer.createText(this._el_0,'	\n			\n		',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray8(6,'onImageClick',(null as any),'onVideoBeforePlay',(null as any),'onVideoStopPlay',(null as any)),this.eventHandler(this.handleEvent_6));
    this._CdfMediaComponent_6_3.subscribe(this,this.eventHandler(this.handleEvent_6),true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._text_10,
      this._text_11,
      this._anchor_12,
      this._text_13
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.CdfMediaComponent) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._CdfMediaComponent_6_3.context; }
    if (((token === import18.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import19.NgIf) && (12 === requestNodeIndex))) { return this._NgIf_12_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_19:any = this.context.$implicit.mediaPaneState;
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      var animationTransition_mediaListItemTrigger:any = this.componentType.animations['mediaListItemTrigger'](this,this._el_0,((this._expr_19 == import1.UNINITIALIZED)? 'void': this._expr_19),((currVal_19 == import1.UNINITIALIZED)? 'void': currVal_19));
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.context.$implicit.mediaPaneState;
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      var animationTransition_mediaStateTrigger:any = this.componentType.animations['mediaStateTrigger'](this,this._el_3,((this._expr_20 == import1.UNINITIALIZED)? 'void': this._expr_20),((currVal_20 == import1.UNINITIALIZED)? 'void': currVal_20));
      this._expr_20 = currVal_20;
    }
    const currVal_6_0_0:any = this.context.$implicit;
    this._CdfMediaComponent_6_3.check_mediaModel(currVal_6_0_0,throwOnChange,false);
    const currVal_6_0_1:any = this.parentView.context.showTitle;
    this._CdfMediaComponent_6_3.check_showTitle(currVal_6_0_1,throwOnChange,false);
    const currVal_6_0_2:any = this.parentView.context.showType;
    this._CdfMediaComponent_6_3.check_showType(currVal_6_0_2,throwOnChange,false);
    this._CdfMediaComponent_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_12_0_0:any = this.context.$implicit.IsInfoPaneExpanded;
    this._NgIf_12_6.check_ngIf(currVal_12_0_0,throwOnChange,false);
    this._NgIf_12_6.ngDoCheck(this,this._anchor_12,throwOnChange);
    this._vc_12.detectChangesInNestedViews(throwOnChange);
    this._CdfMediaComponent_6_3.checkHost(this,this.compView_6,this._el_6,throwOnChange);
    this.compView_6.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_CdfMediaSliderComponent0>this.parentView)._viewQuery_CdfMediaComponent_1.setDirty();
  }
  destroyInternal():void {
    this._vc_12.destroyNestedViews();
    this.compView_6.destroy();
    this._CdfMediaComponent_6_3.ngOnDestroy();
  }
  detachInternal():void {
    var animationTransition_mediaListItemTrigger:any = this.componentType.animations['mediaListItemTrigger'](this,this._el_0,this._expr_19,'void');
    var animationTransition_mediaStateTrigger:any = this.componentType.animations['mediaStateTrigger'](this,this._el_3,this._expr_20,'void');
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 6) && (ngContentIndex == 0))) {
      cb(this._text_7,ctx);
      this.visitProjectedNodes(0,cb,ctx);
      cb(this._text_8,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 12)) { return new View_CdfMediaSliderComponent2(this.viewUtils,this,12,this._anchor_12,this._vc_12); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onMediaComponentClick($event,this.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onImageClick')) {
      const pd_sub_0:any = ((<any>this.parentView.context.doImageClick(this.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onVideoBeforePlay')) {
      const pd_sub_1:any = ((<any>this.parentView.context.onVideoBeforePlay(this.context.$implicit)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onVideoStopPlay')) {
      const pd_sub_2:any = ((<any>this.parentView.context.onVideoAfterStopPlay(this.context.$implicit)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
var renderType_CdfMediaSliderComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.Emulated,styles_CdfMediaSliderComponent,{
  'mediaListItemTrigger': CdfMediaSliderComponent_mediaListItemTrigger_factory,
  'mediaStateTrigger': CdfMediaSliderComponent_mediaStateTrigger_factory,
  'infoPaneSlideTrigger': CdfMediaSliderComponent_infoPaneSlideTrigger_factory
}
);
export class View_CdfMediaSliderComponent0 extends import2.AppView<import0.CdfMediaSliderComponent> {
  _viewQuery_mediaComponentContainer_0:import22.QueryList<any>;
  _viewQuery_CdfMediaComponent_1:import22.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import16.ViewContainer;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import23.Wrapper_NgFor;
  _text_4:any;
  _text_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CdfMediaSliderComponent0,renderType_CdfMediaSliderComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_mediaComponentContainer_0 = new import22.QueryList<any>();
    this._viewQuery_CdfMediaComponent_1 = new import22.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'ul',new import3.InlineArray2(2,'class','media-slider-flex-container'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n\n		',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import16.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import18.TemplateRef_(this,3,this._anchor_3);
    this._NgFor_3_6 = new import23.Wrapper_NgFor(this._vc_3.vcRef,this._TemplateRef_3_5,this.parentView.injectorGet(import24.IterableDiffers,this.parentIndex),this.ref);
    this._text_4 = this.renderer.createText(this._el_1,'\n	',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._viewQuery_mediaComponentContainer_0.reset([new import25.ElementRef(this._el_1)]);
    this.context.ULElement = this._viewQuery_mediaComponentContainer_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import26.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.mediaModelList;
    this._NgFor_3_6.check_ngForOf(currVal_3_0_0,throwOnChange,false);
    this._NgFor_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) { if (this._viewQuery_CdfMediaComponent_1.dirty) {
        this._viewQuery_CdfMediaComponent_1.reset([this._vc_3.mapNestedViews(View_CdfMediaSliderComponent1,(nestedView:View_CdfMediaSliderComponent1):any => {
          return [nestedView._CdfMediaComponent_6_3.context];
      })]);
      this.context.mediaComponentList = this._viewQuery_CdfMediaComponent_1;
      this._viewQuery_CdfMediaComponent_1.notifyOnChanges();
    } }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 3)) { return new View_CdfMediaSliderComponent1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}