/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './cdf-media.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../image/cdf-image.component';
import * as import10 from '../image/cdf-image.component.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '../video/cdf-video-youtube.component';
import * as import13 from '../video/cdf-video-youtube.component.ngfactory';
import * as import14 from '../../services/client-config.service';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/common/src/directives/ng_if';
export class Wrapper_CdfMediaComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CdfMediaComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  constructor() {
    this._changed = false;
    this.context = new import0.CdfMediaComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
  }
  check_mediaModel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.mediaModel = currValue;
      this._expr_0 = currValue;
    }
  }
  check_showTitle(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.showTitle = currValue;
      this._expr_1 = currValue;
    }
  }
  check_showType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.showType = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_3:any = this.context.classNames;
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementProperty(el,'className',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context.isMediaVideo;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementClass(el,'media-is-video',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this.context.isMediaImage;
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementClass(el,'media-is-image',currVal_5);
      this._expr_5 = currVal_5;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onImageClick.subscribe(_eventHandler.bind(view,'onImageClick'))); }
    if (emit1) { (this.subscription1 = this.context.onVideoBeforePlay.subscribe(_eventHandler.bind(view,'onVideoBeforePlay'))); }
    if (emit2) { (this.subscription2 = this.context.onVideoStopPlay.subscribe(_eventHandler.bind(view,'onVideoStopPlay'))); }
  }
}
var renderType_CdfMediaComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CdfMediaComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CdfMediaComponent>;
  _CdfMediaComponent_0_3:Wrapper_CdfMediaComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CdfMediaComponent_Host0,renderType_CdfMediaComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'cdf-media',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CdfMediaComponent0(this.viewUtils,this,0,this._el_0);
    this._CdfMediaComponent_0_3 = new Wrapper_CdfMediaComponent();
    this.compView_0.create(this._CdfMediaComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CdfMediaComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CdfMediaComponent) && (0 === requestNodeIndex))) { return this._CdfMediaComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CdfMediaComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._CdfMediaComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CdfMediaComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const CdfMediaComponentNgFactory:import8.ComponentFactory<import0.CdfMediaComponent> = new import8.ComponentFactory<import0.CdfMediaComponent>('cdf-media',View_CdfMediaComponent_Host0,import0.CdfMediaComponent);
const styles_CdfMediaComponent:any[] = ['[_nghost-%COMP%] \n	{\n		cursor: pointer;\n		display: inherit;\n		height: 200px;\n		overflow: hidden;\n		width: 200px;\n	}\n\n	[_nghost-%COMP%]:hover     .cdf-background-image, [_nghost-%COMP%]:hover     .jw-preview\n	{\n		height: 110%;\n		margin: -5%;\n		overflow: hidden;\n		width: 110%;\n	}\n\n	a[_ngcontent-%COMP%]\n	{\n		display: block;\n		height: 100%;\n		width: 100%;		\n	}\n\n	.cdf-media-type[_ngcontent-%COMP%]\n	{\n		background-color: #ccc;\n		color: #fff;\n		left: 0.75rem;\n		padding: 0.25rem 0.5rem;\n		position: absolute;\n		top: 0.75rem;	\n		z-index: 100;\n	}\n\n	.cdf-media-title-container[_ngcontent-%COMP%]\n	{\n		bottom: 0;\n		background-color: rgba(0,0,0,0.15);\n		left: 0;\n		position: absolute;\n		right: 0;\n		top: 0;\n	}\n\n	.cdf-media-title-wrapper[_ngcontent-%COMP%]\n	{\n		bottom: 0;\n		left: 0;\n		padding: 10%;\n		position: absolute;\n		right: 0;\n	}\n\n	.cdf-media-title[_ngcontent-%COMP%]\n	{\n		color: #fff;\n		line-height: 1;\n		position: relative;\n		width: 100%;\n	}'];
class View_CdfMediaComponent1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import9.CdfImageComponent>;
  _CdfImageComponent_0_3:import10.Wrapper_CdfImageComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_CdfMediaComponent1,renderType_CdfMediaComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'cdf-image',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import10.View_CdfImageComponent0(this.viewUtils,this,0,this._el_0);
    this._CdfImageComponent_0_3 = new import10.Wrapper_CdfImageComponent();
    this.compView_0.create(this._CdfImageComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.CdfImageComponent) && (0 === requestNodeIndex))) { return this._CdfImageComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.mediaModel;
    this._CdfImageComponent_0_3.check_imageModel(currVal_0_0_0,throwOnChange,false);
    this._CdfImageComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_CdfMediaComponent0>this.parentView)._viewQuery_CdfImageComponent_1.setDirty();
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.doImageClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_CdfMediaComponent2 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import12.CdfVideoYouTubeComponent>;
  _CdfVideoYouTubeComponent_0_3:import13.Wrapper_CdfVideoYouTubeComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_CdfMediaComponent2,renderType_CdfMediaComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'cdf-video-youtube',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import13.View_CdfVideoYouTubeComponent0(this.viewUtils,this,0,this._el_0);
    this._CdfVideoYouTubeComponent_0_3 = new import13.Wrapper_CdfVideoYouTubeComponent(this.parentView.injectorGet(import14.ClientConfigService,this.parentIndex));
    this.compView_0.create(this._CdfVideoYouTubeComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'onVideoBeforePlay',(null as any),'onVideoStopPlay',(null as any)),this.eventHandler(this.handleEvent_0));
    this._CdfVideoYouTubeComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.CdfVideoYouTubeComponent) && (0 === requestNodeIndex))) { return this._CdfVideoYouTubeComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.mediaModel;
    this._CdfVideoYouTubeComponent_0_3.check_mediaModel(currVal_0_0_0,throwOnChange,false);
    this._CdfVideoYouTubeComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CdfVideoYouTubeComponent_0_3.context.ngAfterViewInit(); } }
  }
  dirtyParentQueriesInternal():void {
    (<View_CdfMediaComponent0>this.parentView)._viewQuery_CdfVideoYouTubeComponent_0.setDirty();
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CdfVideoYouTubeComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onVideoBeforePlay')) {
      const pd_sub_0:any = ((<any>this.parentView.context.doOnVideoBeforePlay()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onVideoStopPlay')) {
      const pd_sub_1:any = ((<any>this.parentView.context.doOnVideoStopPlay()) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
class View_CdfMediaComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_CdfMediaComponent3,renderType_CdfMediaComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'cdf-media-type cdf-media-type-',this.parentView.context.getCleanType(),'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = import3.inlineInterpolate(1,'',this.parentView.context.mediaModel.Type,'');
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setText(this._text_1,currVal_3);
      this._expr_3 = currVal_3;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CdfMediaComponent4 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  /*private*/ _expr_11:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_CdfMediaComponent4,renderType_CdfMediaComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_11 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'section',new import3.InlineArray2(2,'class','cdf-media-title-container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n		',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'a',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n			',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'section',new import3.InlineArray2(2,'class','cdf-media-title-wrapper'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n				',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'h2',new import3.InlineArray2(2,'class','cdf-media-title'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n			',(null as any));
    this._text_9 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._text_10 = this.renderer.createText(this._el_0,'\n	',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_11:any = import3.inlineInterpolate(1,'',this.parentView.context.mediaModel.Title,'');
    if (import3.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setText(this._text_7,currVal_11);
      this._expr_11 = currVal_11;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onMediaClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_CdfMediaComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.Emulated,styles_CdfMediaComponent,{});
export class View_CdfMediaComponent0 extends import2.AppView<import0.CdfMediaComponent> {
  _viewQuery_CdfVideoYouTubeComponent_0:import15.QueryList<any>;
  _viewQuery_CdfImageComponent_1:import15.QueryList<any>;
  _text_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import11.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import16.Wrapper_NgIf;
  _text_3:any;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import11.ViewContainer;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import16.Wrapper_NgIf;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  _anchor_11:any;
  /*private*/ _vc_11:import11.ViewContainer;
  _TemplateRef_11_5:any;
  _NgIf_11_6:import16.Wrapper_NgIf;
  _text_12:any;
  _text_13:any;
  _anchor_14:any;
  /*private*/ _vc_14:import11.ViewContainer;
  _TemplateRef_14_5:any;
  _NgIf_14_6:import16.Wrapper_NgIf;
  _text_15:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CdfMediaComponent0,renderType_CdfMediaComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_CdfVideoYouTubeComponent_0 = new import15.QueryList<any>();
    this._viewQuery_CdfImageComponent_1 = new import15.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_2 = new import11.ViewContainer(2,(null as any),this,this._anchor_2);
    this._TemplateRef_2_5 = new import17.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import16.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(parentRenderNode,'\n\n	',(null as any));
    this._text_4 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_5 = new import11.ViewContainer(5,(null as any),this,this._anchor_5);
    this._TemplateRef_5_5 = new import17.TemplateRef_(this,5,this._anchor_5);
    this._NgIf_5_6 = new import16.Wrapper_NgIf(this._vc_5.vcRef,this._TemplateRef_5_5);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n\n	',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n		',(null as any));
    this.projectNodes(this._el_7,0);
    this._text_9 = this.renderer.createText(this._el_7,'\n	',(null as any));
    this._text_10 = this.renderer.createText(parentRenderNode,'\n\n	',(null as any));
    this._anchor_11 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_11 = new import11.ViewContainer(11,(null as any),this,this._anchor_11);
    this._TemplateRef_11_5 = new import17.TemplateRef_(this,11,this._anchor_11);
    this._NgIf_11_6 = new import16.Wrapper_NgIf(this._vc_11.vcRef,this._TemplateRef_11_5);
    this._text_12 = this.renderer.createText(parentRenderNode,'\n\n	',(null as any));
    this._text_13 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._anchor_14 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_14 = new import11.ViewContainer(14,(null as any),this,this._anchor_14);
    this._TemplateRef_14_5 = new import17.TemplateRef_(this,14,this._anchor_14);
    this._NgIf_14_6 = new import16.Wrapper_NgIf(this._vc_14.vcRef,this._TemplateRef_14_5);
    this._text_15 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_7,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_7));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._text_10,
      this._anchor_11,
      this._text_12,
      this._text_13,
      this._anchor_14,
      this._text_15
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import18.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import17.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import18.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    if (((token === import17.TemplateRef) && (11 === requestNodeIndex))) { return this._TemplateRef_11_5; }
    if (((token === import18.NgIf) && (11 === requestNodeIndex))) { return this._NgIf_11_6.context; }
    if (((token === import17.TemplateRef) && (14 === requestNodeIndex))) { return this._TemplateRef_14_5; }
    if (((token === import18.NgIf) && (14 === requestNodeIndex))) { return this._NgIf_14_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = (this.context.mediaModel.HasImage && !this.context.mediaModel.HasVideo);
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_5_0_0:any = this.context.mediaModel.HasVideo;
    this._NgIf_5_6.check_ngIf(currVal_5_0_0,throwOnChange,false);
    this._NgIf_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    const currVal_11_0_0:any = ((this.context.showType && this.context.mediaModel.Type) && (this.context.mediaModel.Type.length > 0));
    this._NgIf_11_6.check_ngIf(currVal_11_0_0,throwOnChange,false);
    this._NgIf_11_6.ngDoCheck(this,this._anchor_11,throwOnChange);
    const currVal_14_0_0:boolean = ((!this.context.mediaModel.HasImage && !this.context.mediaModel.HasVideo) || this.context.showTitle);
    this._NgIf_14_6.check_ngIf(currVal_14_0_0,throwOnChange,false);
    this._NgIf_14_6.ngDoCheck(this,this._anchor_14,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    this._vc_11.detectChangesInNestedViews(throwOnChange);
    this._vc_14.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._viewQuery_CdfVideoYouTubeComponent_0.dirty) {
          this._viewQuery_CdfVideoYouTubeComponent_0.reset([this._vc_5.mapNestedViews(View_CdfMediaComponent2,(nestedView:View_CdfMediaComponent2):any => {
            return [nestedView._CdfVideoYouTubeComponent_0_3.context];
        })]);
        this.context.videoComponent = this._viewQuery_CdfVideoYouTubeComponent_0.first;
      }
      if (this._viewQuery_CdfImageComponent_1.dirty) {
          this._viewQuery_CdfImageComponent_1.reset([this._vc_2.mapNestedViews(View_CdfMediaComponent1,(nestedView:View_CdfMediaComponent1):any => {
            return [nestedView._CdfImageComponent_0_3.context];
        })]);
        this.context.imageComponent = this._viewQuery_CdfImageComponent_1.first;
      }
    }
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_5.destroyNestedViews();
    this._vc_11.destroyNestedViews();
    this._vc_14.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_CdfMediaComponent1(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 5)) { return new View_CdfMediaComponent2(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    if ((nodeIndex == 11)) { return new View_CdfMediaComponent3(this.viewUtils,this,11,this._anchor_11,this._vc_11); }
    if ((nodeIndex == 14)) { return new View_CdfMediaComponent4(this.viewUtils,this,14,this._anchor_14,this._vc_14); }
    return (null as any);
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onMediaClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}