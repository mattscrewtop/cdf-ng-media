/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './cdf-media.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from './components/media/cdf-media.component.ngfactory';
import * as import6 from './components/media-slider/cdf-media-slider.component.ngfactory';
import * as import7 from './components/video/cdf-video-background.component.ngfactory';
import * as import8 from '@angular/core/src/i18n/tokens';
class CdfMediaModuleInjector extends import0.NgModuleInjector<import1.CdfMediaModule> {
  _CommonModule_0:import2.CommonModule;
  _CdfMediaModule_1:import1.CdfMediaModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,[
      import5.CdfMediaComponentNgFactory,
      import6.CdfMediaSliderComponentNgFactory,
      import7.CdfVideoBackgroundComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import8.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.CdfMediaModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._CdfMediaModule_1 = new import1.CdfMediaModule();
    return this._CdfMediaModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.CdfMediaModule)) { return this._CdfMediaModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const CdfMediaModuleNgFactory:import0.NgModuleFactory<import1.CdfMediaModule> = new import0.NgModuleFactory(CdfMediaModuleInjector,import1.CdfMediaModule);